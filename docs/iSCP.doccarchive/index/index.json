{"includedArchiveIdentifiers":["jp.co.aptpod.iSCP"],"interfaceLanguages":{"occ":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/iscp\/connecttointdashapi","title":"Connect To intdash API","type":"article"},{"path":"\/documentation\/iscp\/e2ecall","title":"E2E Call","type":"article"},{"path":"\/documentation\/iscp\/startdownstream","title":"Start Downstream","type":"article"},{"path":"\/documentation\/iscp\/startupstream","title":"Start Upstream","type":"article"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/iscp\/connection","title":"Connection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/hash","title":"hash","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/isequal(_:)","title":"isEqual:","type":"method"}],"path":"\/documentation\/iscp\/downstream","title":"Downstream","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/hash","title":"hash","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/isequal(_:)","title":"isEqual:","type":"method"}],"path":"\/documentation\/iscp\/upstream","title":"Upstream","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscpversionnumber","title":"iscpVersionNumber","type":"var"},{"path":"\/documentation\/iscp\/iscpversionstring","title":"iscpVersionString","type":"var"}],"path":"\/documentation\/iscp","title":"iSCP","type":"module"}],"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/iscp\/connecttointdashapi","title":"Connect To intdash API","type":"article"},{"path":"\/documentation\/iscp\/e2ecall","title":"E2E Call","type":"article"},{"path":"\/documentation\/iscp\/startdownstream","title":"Start Downstream","type":"article"},{"path":"\/documentation\/iscp\/startupstream","title":"Start Upstream","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/connection\/init(address:transportconfig:tokensource:nodeid:projectuuid:pingtimeout:pinginterval:autoreconnect:reconnectbaseinterval:reconnectmaxinterval:encoding:)","title":"init(address: String, transportConfig: ITransportConfig, tokenSource: (((_ token: String?) -> ()) -> ()), nodeID: String, projectUUID: String, pingTimeout: TimeInterval, pingInterval: TimeInterval, autoReconnect: Bool, reconnectBaseInterval: TimeInterval, reconnectMaxInterval: TimeInterval, encoding: EncodingName)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/connection\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/iscp\/connection\/autoreconnect","title":"let autoReconnect: Bool","type":"property"},{"path":"\/documentation\/iscp\/connection\/delegate","title":"var delegate: ConnectionDelegate?","type":"property"},{"path":"\/documentation\/iscp\/connection\/e2ecalldelegate","title":"var e2eCallDelegate: ConnectionE2ECallDelegate?","type":"property"},{"path":"\/documentation\/iscp\/connection\/encoding","title":"let encoding: EncodingName","type":"property"},{"path":"\/documentation\/iscp\/connection\/isconnecting","title":"var isConnecting: Bool","type":"property"},{"path":"\/documentation\/iscp\/connection\/isopen","title":"var isOpen: Bool","type":"property"},{"path":"\/documentation\/iscp\/connection\/isreconnecting","title":"var isReconnecting: Bool","type":"property"},{"path":"\/documentation\/iscp\/connection\/nodeid","title":"let nodeID: String","type":"property"},{"path":"\/documentation\/iscp\/connection\/pinginterval","title":"let pingInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/pingtimeout","title":"let pingTimeout: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/projectuuid","title":"let projectUUID: String","type":"property"},{"path":"\/documentation\/iscp\/connection\/reconnectbaseinterval","title":"let reconnectBaseInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/reconnectmaxinterval","title":"let reconnectMaxInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/tag","title":"var tag: Int","type":"property"},{"path":"\/documentation\/iscp\/connection\/tokensource","title":"let tokenSource: (((_ token: String?) -> ()) -> ())","type":"property"},{"path":"\/documentation\/iscp\/connection\/transportconfig","title":"let transportConfig: ITransportConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/connection\/close(completion:)","title":"func close(completion: ((_ error: Error?) -> ())?)","type":"method"},{"path":"\/documentation\/iscp\/connection\/connect(completion:)","title":"func connect(completion: ((_ error: Error?) -> ()))","type":"method"},{"path":"\/documentation\/iscp\/connection\/opendownstream(downstreamfilters:dataids:qos:omitemptychunk:expiryinterval:ackinterval:completion:)","title":"func openDownstream(downstreamFilters: [DownstreamFilter], dataIDs: [DataID], qos: QoS, omitEmptyChunk: Bool, expiryInterval: TimeInterval, ackInterval: TimeInterval, completion: ((_ downstream: Downstream?, _ error: Error?) -> ()))","type":"method"},{"path":"\/documentation\/iscp\/connection\/openupstream(sessionid:expiryinterval:dataids:qos:ackinterval:persist:flushpolicy:closetimeout:completion:)","title":"func openUpstream(sessionID: String, expiryInterval: TimeInterval, dataIDs: [DataID], qos: QoS, ackInterval: TimeInterval, persist: Bool, flushPolicy: FlushPolicy, closeTimeout: TimeInterval, completion: ((_ upstream: Upstream?, _ error: Error?) -> ()))","type":"method"},{"path":"\/documentation\/iscp\/connection\/reopendownstream(_:completion:)","title":"func reopenDownstream(Downstream, completion: ((_ downstream: Downstream?, _ error: Error?) -> ()))","type":"method"},{"path":"\/documentation\/iscp\/connection\/reopenupstream(_:handoverdatapoints:completion:)","title":"func reopenUpstream(Upstream, handoverDataPoints: Bool, completion: ((_ upstream: Upstream?, _ error: Error?) -> ()))","type":"method"},{"path":"\/documentation\/iscp\/connection\/sendbasetime(basetime:persist:completion:)","title":"func sendBaseTime(baseTime: BaseTime, persist: Bool, completion: ((_ error: Error?) -> ())?)","type":"method"},{"path":"\/documentation\/iscp\/connection\/sendcall(upstreamcall:completion:)","title":"func sendCall(upstreamCall: UpstreamCall, completion: ((_ error: Error?) -> ())?) -> String?","type":"method"},{"path":"\/documentation\/iscp\/connection\/sendcallandwaitreplaycall(upstreamcall:completion:)","title":"func sendCallAndWaitReplayCall(upstreamCall: UpstreamCall, completion: ((_ downstreamReplyCall: DownstreamReplyCall?, _ error: Error?) -> ())) -> String?","type":"method"},{"path":"\/documentation\/iscp\/connection\/sendreplycall(upstreamreplycall:completion:)","title":"func sendReplyCall(upstreamReplyCall: UpstreamReplyCall, completion: ((_ error: Error?) -> ())?) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/connection\/default_auto_reconnect","title":"static let DEFAULT_AUTO_RECONNECT: Bool","type":"property"},{"path":"\/documentation\/iscp\/connection\/default_encoding","title":"static let DEFAULT_ENCODING: EncodingName","type":"property"},{"path":"\/documentation\/iscp\/connection\/default_ping_interval","title":"static let DEFAULT_PING_INTERVAL: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/default_ping_timeout","title":"static let DEFAULT_PING_TIMEOUT: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/default_reconnect_base_interval","title":"static let DEFAULT_RECONNECT_BASE_INTERVAL: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/connection\/default_reconnect_max_interval","title":"static let DEFAULT_RECONNECT_MAX_INTERVAL: TimeInterval","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/connection\/connect(address:transportconfig:tokensource:nodeid:projectuuid:pingtimeout:pinginterval:autoreconnect:reconnectbaseinterval:reconnectmaxinterval:encoding:delegate:e2ecalldelegate:completion:)","title":"static func connect(address: String, transportConfig: ITransportConfig, tokenSource: (((_ token: String?) -> ()) -> ()), nodeID: String, projectUUID: String, pingTimeout: TimeInterval, pingInterval: TimeInterval, autoReconnect: Bool, reconnectBaseInterval: TimeInterval, reconnectMaxInterval: TimeInterval, encoding: EncodingName, delegate: ConnectionDelegate?, e2eCallDelegate: ConnectionE2ECallDelegate?, completion: ((_ connection: Connection?, _ error: Error?) -> ()))","type":"method"}],"path":"\/documentation\/iscp\/connection","title":"Connection","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/state\/==(_:_:)","title":"static func == (State, State) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/state\/dataidaliases","title":"let dataIDAliases: Dictionary<UInt32, DataID>","type":"property"},{"path":"\/documentation\/iscp\/downstream\/state\/lastissuedackid","title":"let lastIssuedAckID: UInt32","type":"property"},{"path":"\/documentation\/iscp\/downstream\/state\/lastissueddataidalias","title":"let lastIssuedDataIDAlias: UInt32","type":"property"},{"path":"\/documentation\/iscp\/downstream\/state\/lastissuedupstreaminfoalias","title":"let lastIssuedUpstreamInfoAlias: UInt32","type":"property"},{"path":"\/documentation\/iscp\/downstream\/state\/upstreaminfos","title":"let upstreamInfos: Dictionary<UInt32, UpstreamInfo>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/state\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstream\/state\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstream\/state","title":"Downstream.State","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/ackinterval","title":"let ackInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/downstream\/connection","title":"let connection: Connection","type":"property"},{"path":"\/documentation\/iscp\/downstream\/delegate","title":"var delegate: DownstreamDelegate?","type":"property"},{"path":"\/documentation\/iscp\/downstream\/expiryinterval","title":"let expiryInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/downstream\/filters","title":"let filters: [DownstreamFilter]","type":"property"},{"path":"\/documentation\/iscp\/downstream\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/iscp\/downstream\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/iscp\/downstream\/omitemptychunk","title":"let omitEmptyChunk: Bool","type":"property"},{"path":"\/documentation\/iscp\/downstream\/qos","title":"let qos: QoS","type":"property"},{"path":"\/documentation\/iscp\/downstream\/servertime","title":"let serverTime: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/close(completion:)","title":"func close(completion: ((_ error: Error?) -> ())?)","type":"method"},{"path":"\/documentation\/iscp\/downstream\/getstate()","title":"func getState() -> State","type":"method"},{"path":"\/documentation\/iscp\/downstream\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstream\/default_ack_interval","title":"static let DEFAULT_ACK_INTERVAL: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/downstream\/default_expiry_interval","title":"static let DEFAULT_EXPIRY_INTERVAL: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/downstream\/default_omit_empty_chunk","title":"static let DEFAULT_OMIT_EMPTY_CHUNK: Bool","type":"property"},{"path":"\/documentation\/iscp\/downstream\/default_qos","title":"static let DEFAULT_QOS: QoS","type":"property"}],"path":"\/documentation\/iscp\/downstream","title":"Downstream","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscplog\/dateformat","title":"var dateFormat: DateFormatter","type":"property"},{"path":"\/documentation\/iscp\/iscplog\/delegate","title":"var delegate: ISCPLogDelegate?","type":"property"},{"path":"\/documentation\/iscp\/iscplog\/level","title":"var level: ISCPLogLevel","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscplog\/shared","title":"static let shared: ISCPLog","type":"property"}],"path":"\/documentation\/iscp\/iscplog","title":"ISCPLog","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/sequencenumbergenerator\/init(_:)","title":"init(UInt64)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/sequencenumbergenerator\/current()","title":"func current() -> UInt32","type":"method"},{"path":"\/documentation\/iscp\/sequencenumbergenerator\/next()","title":"func next() -> UInt32?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/sequencenumbergenerator\/initial_value","title":"static let INITIAL_VALUE: UInt64","type":"property"},{"path":"\/documentation\/iscp\/sequencenumbergenerator\/max_value","title":"static let MAX_VALUE: UInt32","type":"property"}],"path":"\/documentation\/iscp\/sequencenumbergenerator","title":"SequenceNumberGenerator","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/transport\/websocket\/config\/init(path:port:enabletls:)","title":"init(path: String, port: Int?, enableTLS: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/transport\/websocket\/config\/enabletls","title":"var enableTLS: Bool","type":"property"},{"path":"\/documentation\/iscp\/transport\/websocket\/config\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/iscp\/transport\/websocket\/config\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/iscp\/transport\/websocket\/config\/type","title":"var type: TransportType","type":"property"}],"path":"\/documentation\/iscp\/transport\/websocket\/config","title":"Transport.WebSocket.Config","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/transport\/websocket\/default_path","title":"static let DEFAULT_PATH: String","type":"property"}],"path":"\/documentation\/iscp\/transport\/websocket","title":"Transport.WebSocket","type":"class"}],"path":"\/documentation\/iscp\/transport","title":"Transport","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/state\/==(_:_:)","title":"static func == (State, State) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/state\/dataidaliases","title":"let dataIDAliases: Dictionary<UInt32, DataID>","type":"property"},{"path":"\/documentation\/iscp\/upstream\/state\/datapointgroups","title":"let dataPointGroups: [DataPointGroup]","type":"property"},{"path":"\/documentation\/iscp\/upstream\/state\/lastissuedsequencenumber","title":"let lastIssuedSequenceNumber: UInt32","type":"property"},{"path":"\/documentation\/iscp\/upstream\/state\/totaldatapoints","title":"let totalDataPoints: UInt64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/state\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstream\/state\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstream\/state","title":"Upstream.State","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/ackinterval","title":"let ackInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/closetimeout","title":"let closeTimeout: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/connection","title":"let connection: Connection","type":"property"},{"path":"\/documentation\/iscp\/upstream\/delegate","title":"var delegate: UpstreamDelegate?","type":"property"},{"path":"\/documentation\/iscp\/upstream\/expiryinterval","title":"let expiryInterval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/flushpolicy","title":"let flushPolicy: FlushPolicy","type":"property"},{"path":"\/documentation\/iscp\/upstream\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/iscp\/upstream\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/iscp\/upstream\/persist","title":"let persist: Bool","type":"property"},{"path":"\/documentation\/iscp\/upstream\/qos","title":"let qos: QoS","type":"property"},{"path":"\/documentation\/iscp\/upstream\/servertime","title":"let serverTime: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/sessionid","title":"let sessionID: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/close(closesession:completion:)","title":"func close(closeSession: Bool, completion: ((_ error: Error?) -> ())?)","type":"method"},{"path":"\/documentation\/iscp\/upstream\/flush()","title":"func flush() -> Error?","type":"method"},{"path":"\/documentation\/iscp\/upstream\/getstate()","title":"func getState() -> State","type":"method"},{"path":"\/documentation\/iscp\/upstream\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"},{"path":"\/documentation\/iscp\/upstream\/writedatapoint(dataid:datapoint:)","title":"func writeDataPoint(dataID: DataID, dataPoint: DataPoint) -> Error?","type":"method"},{"path":"\/documentation\/iscp\/upstream\/writedatapoints(dataid:datapoints:)","title":"func writeDataPoints(dataID: DataID, dataPoints: [DataPoint]) -> Error?","type":"method"},{"path":"\/documentation\/iscp\/upstream\/writedatapoints(datapointgroup:)","title":"func writeDataPoints(dataPointGroup: DataPointGroup) -> Error?","type":"method"},{"path":"\/documentation\/iscp\/upstream\/writedatapoints(datapointgroups:)","title":"func writeDataPoints(dataPointGroups: [DataPointGroup]) -> Error?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstream\/default_ack_interval","title":"static let DEFAULT_ACK_INTERVAL: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/default_close_timeout","title":"static let DEFAULT_CLOSE_TIMEOUT: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/default_expiry_interval","title":"static let DEFAULT_EXPIRY_INTERVAL: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/upstream\/default_flush_policy","title":"static let DEFAULT_FLUSH_POLICY: FlushPolicy","type":"property"},{"path":"\/documentation\/iscp\/upstream\/default_persist","title":"static let DEFAULT_PERSIST: Bool","type":"property"},{"path":"\/documentation\/iscp\/upstream\/default_qos","title":"static let DEFAULT_QOS: QoS","type":"property"}],"path":"\/documentation\/iscp\/upstream","title":"Upstream","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/connectiondelegate\/diddisconnect(connection:)","title":"func didDisconnect(connection: Connection)","type":"method"},{"path":"\/documentation\/iscp\/connectiondelegate\/didfailwitherror(connection:error:)","title":"func didFailWithError(connection: Connection, error: Error)","type":"method"},{"path":"\/documentation\/iscp\/connectiondelegate\/didreconnect(connection:)","title":"func didReconnect(connection: Connection)","type":"method"}],"path":"\/documentation\/iscp\/connectiondelegate","title":"ConnectionDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/connectione2ecalldelegate\/didreceivecall(connection:downstreamcall:)","title":"func didReceiveCall(connection: Connection, downstreamCall: DownstreamCall)","type":"method"},{"path":"\/documentation\/iscp\/connectione2ecalldelegate\/didreceivereplycall(connection:downstreamreplycall:)","title":"func didReceiveReplyCall(connection: Connection, downstreamReplyCall: DownstreamReplyCall)","type":"method"}],"path":"\/documentation\/iscp\/connectione2ecalldelegate","title":"ConnectionE2ECallDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamdelegate\/didclosewitherror(downstream:error:)","title":"func didCloseWithError(downstream: Downstream, error: Error)","type":"method"},{"path":"\/documentation\/iscp\/downstreamdelegate\/didfailwitherror(downstream:error:)","title":"func didFailWithError(downstream: Downstream, error: Error)","type":"method"},{"path":"\/documentation\/iscp\/downstreamdelegate\/didreceivechunk(downstream:message:)","title":"func didReceiveChunk(downstream: Downstream, message: DownstreamChunk)","type":"method"},{"path":"\/documentation\/iscp\/downstreamdelegate\/didreceivemetadata(downstream:message:)","title":"func didReceiveMetadata(downstream: Downstream, message: DownstreamMetadata)","type":"method"},{"path":"\/documentation\/iscp\/downstreamdelegate\/didresume(downstream:)","title":"func didResume(downstream: Downstream)","type":"method"}],"path":"\/documentation\/iscp\/downstreamdelegate","title":"DownstreamDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscplogdelegate\/didoutputlog(message:level:function:file:line:)","title":"func didOutputLog(message: String, level: ISCPLogLevel, function: StaticString, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/iscp\/iscplogdelegate","title":"ISCPLogDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/itransportconfig\/type","title":"var type: TransportType","type":"property"}],"path":"\/documentation\/iscp\/itransportconfig","title":"ITransportConfig","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamdelegate\/didclosewitherror(upstream:error:)","title":"func didCloseWithError(upstream: Upstream, error: Error)","type":"method"},{"path":"\/documentation\/iscp\/upstreamdelegate\/didfailwitherror(upstream:error:)","title":"func didFailWithError(upstream: Upstream, error: Error)","type":"method"},{"path":"\/documentation\/iscp\/upstreamdelegate\/didgeneratechunk(upstream:message:)","title":"func didGenerateChunk(upstream: Upstream, message: UpstreamChunk)","type":"method"},{"path":"\/documentation\/iscp\/upstreamdelegate\/didreceiveack(upstream:message:)","title":"func didReceiveAck(upstream: Upstream, message: UpstreamChunkAck)","type":"method"},{"path":"\/documentation\/iscp\/upstreamdelegate\/didresume(upstream:)","title":"func didResume(upstream: Upstream)","type":"method"}],"path":"\/documentation\/iscp\/upstreamdelegate","title":"UpstreamDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/basetime\/==(_:_:)","title":"static func == (BaseTime, BaseTime) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/basetime\/init(sessionid:name:priority:elapsedtime:basetime:)","title":"init(sessionID: String, name: String, priority: UInt8, elapsedTime: TimeInterval, baseTime: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/basetime\/basetime","title":"var baseTime: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/basetime\/elapsedtime","title":"var elapsedTime: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/basetime\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/basetime\/priority","title":"var priority: UInt8","type":"property"},{"path":"\/documentation\/iscp\/basetime\/sessionid","title":"var sessionID: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/basetime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/basetime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/basetime","title":"BaseTime","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/datafilter\/==(_:_:)","title":"static func == (DataFilter, DataFilter) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/datafilter\/init(name:type:)","title":"init(name: String, type: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/datafilter\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/datafilter\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/iscp\/datafilter\/type","title":"var type: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/datafilter\/all","title":"static var all: DataFilter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/datafilter\/parse(_:)","title":"static func parse(String) -> (DataFilter?, Error?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/datafilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/datafilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/datafilter","title":"DataFilter","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/dataid\/==(_:_:)","title":"static func == (DataID, DataID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/dataid\/init(name:type:)","title":"init(name: String, type: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/dataid\/isnamevalid","title":"var isNameValid: Bool","type":"property"},{"path":"\/documentation\/iscp\/dataid\/istypevalid","title":"var isTypeValid: Bool","type":"property"},{"path":"\/documentation\/iscp\/dataid\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/dataid\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/iscp\/dataid\/type","title":"var type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/dataid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/dataid\/isvalid(_:)","title":"static func isValid(String) -> Bool","type":"method"},{"path":"\/documentation\/iscp\/dataid\/parse(_:)","title":"static func parse(String) -> (DataID?, Error?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/dataid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/dataid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/dataid","title":"DataID","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapoint\/==(_:_:)","title":"static func == (DataPoint, DataPoint) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapoint\/init(elapsedtime:payload:)","title":"init(elapsedTime: TimeInterval, payload: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapoint\/elapsedtime","title":"var elapsedTime: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/datapoint\/payload","title":"var payload: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/datapoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/datapoint","title":"DataPoint","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapointgroup\/==(_:_:)","title":"static func == (DataPointGroup, DataPointGroup) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapointgroup\/init(dataid:datapoints:)","title":"init(dataID: DataID, dataPoints: [DataPoint])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapointgroup\/dataid","title":"var dataID: DataID","type":"property"},{"path":"\/documentation\/iscp\/datapointgroup\/datapoints","title":"var dataPoints: [DataPoint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapointgroup\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/datapointgroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/datapointgroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/datapointgroup","title":"DataPointGroup","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamabnormalclose\/==(_:_:)","title":"static func == (DownstreamAbnormalClose, DownstreamAbnormalClose) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamabnormalclose\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamabnormalclose\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamabnormalclose\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamabnormalclose","title":"DownstreamAbnormalClose","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamcall\/==(_:_:)","title":"static func == (DownstreamCall, DownstreamCall) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamcall\/callid","title":"var callID: String","type":"property"},{"path":"\/documentation\/iscp\/downstreamcall\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/downstreamcall\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/iscp\/downstreamcall\/sourcenodeid","title":"var sourceNodeID: String","type":"property"},{"path":"\/documentation\/iscp\/downstreamcall\/type","title":"var type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamcall\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamcall\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamcall","title":"DownstreamCall","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamchunk\/==(_:_:)","title":"static func == (DownstreamChunk, DownstreamChunk) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamchunk\/datapointgroups","title":"var dataPointGroups: [DataPointGroup]","type":"property"},{"path":"\/documentation\/iscp\/downstreamchunk\/sequencenumber","title":"var sequenceNumber: UInt32","type":"property"},{"path":"\/documentation\/iscp\/downstreamchunk\/upstreaminfo","title":"var upstreamInfo: UpstreamInfo","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamchunk\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamchunk\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamchunk","title":"DownstreamChunk","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamfilter\/==(_:_:)","title":"static func == (DownstreamFilter, DownstreamFilter) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamfilter\/init(sourcenodeid:datafilters:)","title":"init(sourceNodeID: String, dataFilters: [DataFilter])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamfilter\/datafilters","title":"var dataFilters: [DataFilter]","type":"property"},{"path":"\/documentation\/iscp\/downstreamfilter\/sourcenodeid","title":"var sourceNodeID: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamfilter\/allfor(_:)","title":"static func allFor(String) -> DownstreamFilter","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamfilter","title":"DownstreamFilter","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreammetadata\/==(_:_:)","title":"static func == (DownstreamMetadata, DownstreamMetadata) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.property","title":"var metadata: Metadata?","type":"property"},{"path":"\/documentation\/iscp\/downstreammetadata\/sourcenodeid","title":"var sourceNodeID: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/==(_:_:)","title":"static func == (Metadata, Metadata) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/basetime(_:)","title":"case baseTime(BaseTime)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/downstreamabnormalclose(_:)","title":"case downstreamAbnormalClose(DownstreamAbnormalClose)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/downstreamnormalclose(_:)","title":"case downstreamNormalClose(DownstreamNormalClose)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/downstreamopen(_:)","title":"case downstreamOpen(DownstreamOpen)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/downstreamresume(_:)","title":"case downstreamResume(DownstreamResume)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/upstreamabnormalclose(_:)","title":"case upstreamAbnormalClose(UpstreamAbnormalClose)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/upstreamnormalclose(_:)","title":"case upstreamNormalClose(UpstreamNormalClose)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/upstreamopen(_:)","title":"case upstreamOpen(UpstreamOpen)","type":"case"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/upstreamresume(_:)","title":"case upstreamResume(UpstreamResume)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreammetadata\/metadata-swift.enum","title":"DownstreamMetadata.Metadata","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreammetadata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreammetadata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreammetadata","title":"DownstreamMetadata","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamnormalclose\/==(_:_:)","title":"static func == (DownstreamNormalClose, DownstreamNormalClose) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamnormalclose\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamnormalclose\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamnormalclose\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamnormalclose","title":"DownstreamNormalClose","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamopen\/==(_:_:)","title":"static func == (DownstreamOpen, DownstreamOpen) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamopen\/downstreamfilters","title":"var downstreamFilters: [DownstreamFilter]","type":"property"},{"path":"\/documentation\/iscp\/downstreamopen\/qos","title":"var qos: QoS","type":"property"},{"path":"\/documentation\/iscp\/downstreamopen\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamopen\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamopen\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamopen","title":"DownstreamOpen","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamreplycall\/==(_:_:)","title":"static func == (DownstreamReplyCall, DownstreamReplyCall) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamreplycall\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/downstreamreplycall\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/iscp\/downstreamreplycall\/requestcallid","title":"var requestCallID: String","type":"property"},{"path":"\/documentation\/iscp\/downstreamreplycall\/sourcenodeid","title":"var sourceNodeID: String","type":"property"},{"path":"\/documentation\/iscp\/downstreamreplycall\/type","title":"var type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamreplycall\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamreplycall\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamreplycall","title":"DownstreamReplyCall","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamresume\/==(_:_:)","title":"static func == (DownstreamResume, DownstreamResume) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamresume\/downstreamfilters","title":"var downstreamFilters: [DownstreamFilter]","type":"property"},{"path":"\/documentation\/iscp\/downstreamresume\/qos","title":"var qos: QoS","type":"property"},{"path":"\/documentation\/iscp\/downstreamresume\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/downstreamresume\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/downstreamresume\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/downstreamresume","title":"DownstreamResume","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/flushpolicy\/buffersize","title":"let bufferSize: UInt32","type":"property"},{"path":"\/documentation\/iscp\/flushpolicy\/interval","title":"let interval: TimeInterval","type":"property"},{"path":"\/documentation\/iscp\/flushpolicy\/type","title":"let type: FlushType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/flushpolicy\/default_buffer_size","title":"static let DEFAULT_BUFFER_SIZE: UInt32","type":"property"},{"path":"\/documentation\/iscp\/flushpolicy\/default_flush_type","title":"static let DEFAULT_FLUSH_TYPE: FlushType","type":"property"},{"path":"\/documentation\/iscp\/flushpolicy\/default_interval","title":"static let DEFAULT_INTERVAL: TimeInterval","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/flushpolicy\/buffersizeonly(buffersize:)","title":"static func BufferSizeOnly(bufferSize: UInt32) -> FlushPolicy","type":"method"},{"path":"\/documentation\/iscp\/flushpolicy\/immediately()","title":"static func Immediately() -> FlushPolicy","type":"method"},{"path":"\/documentation\/iscp\/flushpolicy\/intervalonly(interval:)","title":"static func IntervalOnly(interval: TimeInterval) -> FlushPolicy","type":"method"},{"path":"\/documentation\/iscp\/flushpolicy\/intervalorbuffersize(interval:buffersize:)","title":"static func IntervalOrBufferSize(interval: TimeInterval, bufferSize: UInt32) -> FlushPolicy","type":"method"},{"path":"\/documentation\/iscp\/flushpolicy\/noflush()","title":"static func NoFlush() -> FlushPolicy","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/buffersizeonly","title":"case bufferSizeOnly","type":"case"},{"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/immediately","title":"case immediately","type":"case"},{"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/intervalonly","title":"case intervalOnly","type":"case"},{"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/intervalorbuffersize","title":"case intervalOrBufferSize","type":"case"},{"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/none","title":"case none","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/flushpolicy\/flushtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/flushpolicy\/flushtype","title":"FlushPolicy.FlushType","type":"enum"}],"path":"\/documentation\/iscp\/flushpolicy","title":"FlushPolicy","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamabnormalclose\/==(_:_:)","title":"static func == (UpstreamAbnormalClose, UpstreamAbnormalClose) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamabnormalclose\/sessionid","title":"var sessionID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamabnormalclose\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamabnormalclose\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamabnormalclose\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamabnormalclose","title":"UpstreamAbnormalClose","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamcall\/==(_:_:)","title":"static func == (UpstreamCall, UpstreamCall) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamcall\/init(destinationnodeid:name:type:payload:)","title":"init(destinationNodeID: String, name: String, type: String, payload: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamcall\/destinationnodeid","title":"var destinationNodeID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamcall\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamcall\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/iscp\/upstreamcall\/type","title":"var type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamcall\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamcall\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamcall","title":"UpstreamCall","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamchunk\/==(_:_:)","title":"static func == (UpstreamChunk, UpstreamChunk) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamchunk\/datapointcount","title":"var dataPointCount: UInt64","type":"property"},{"path":"\/documentation\/iscp\/upstreamchunk\/datapointgroups","title":"var dataPointGroups: [DataPointGroup]","type":"property"},{"path":"\/documentation\/iscp\/upstreamchunk\/payloadsize","title":"var payloadSize: UInt64","type":"property"},{"path":"\/documentation\/iscp\/upstreamchunk\/sequencenumber","title":"var sequenceNumber: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamchunk\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamchunk\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamchunk","title":"UpstreamChunk","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamchunkack\/==(_:_:)","title":"static func == (UpstreamChunkAck, UpstreamChunkAck) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamchunkack\/resultcode","title":"var resultCode: UInt32","type":"property"},{"path":"\/documentation\/iscp\/upstreamchunkack\/resultstring","title":"var resultString: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamchunkack\/sequencenumber","title":"var sequenceNumber: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamchunkack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamchunkack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamchunkack","title":"UpstreamChunkAck","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreaminfo\/==(_:_:)","title":"static func == (UpstreamInfo, UpstreamInfo) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreaminfo\/sessionid","title":"var sessionID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreaminfo\/sourcenodeid","title":"var sourceNodeID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreaminfo\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreaminfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreaminfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreaminfo","title":"UpstreamInfo","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamnormalclose\/==(_:_:)","title":"static func == (UpstreamNormalClose, UpstreamNormalClose) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamnormalclose\/finalsequencenumber","title":"var finalSequenceNumber: UInt32","type":"property"},{"path":"\/documentation\/iscp\/upstreamnormalclose\/sessionid","title":"var sessionID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamnormalclose\/streamid","title":"var streamID: UUID","type":"property"},{"path":"\/documentation\/iscp\/upstreamnormalclose\/totaldatapoints","title":"var totalDataPoints: UInt64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamnormalclose\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamnormalclose\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamnormalclose","title":"UpstreamNormalClose","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamopen\/==(_:_:)","title":"static func == (UpstreamOpen, UpstreamOpen) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamopen\/qos","title":"var qos: QoS","type":"property"},{"path":"\/documentation\/iscp\/upstreamopen\/sessionid","title":"var sessionID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamopen\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamopen\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamopen\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamopen","title":"UpstreamOpen","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamreplycall\/==(_:_:)","title":"static func == (UpstreamReplyCall, UpstreamReplyCall) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamreplycall\/init(requestcallid:destinationnodeid:name:type:payload:)","title":"init(requestCallID: String, destinationNodeID: String, name: String, type: String, payload: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamreplycall\/destinationnodeid","title":"var destinationNodeID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamreplycall\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamreplycall\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/iscp\/upstreamreplycall\/requestcallid","title":"var requestCallID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamreplycall\/type","title":"var type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamreplycall\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamreplycall\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamreplycall","title":"UpstreamReplyCall","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamresume\/==(_:_:)","title":"static func == (UpstreamResume, UpstreamResume) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamresume\/sessionid","title":"var sessionID: String","type":"property"},{"path":"\/documentation\/iscp\/upstreamresume\/streamid","title":"var streamID: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/upstreamresume\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/upstreamresume\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/upstreamresume","title":"UpstreamResume","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscpversionnumber","title":"var iscpVersionNumber: Double","type":"var"},{"path":"\/documentation\/iscp\/iscpversionstring","title":"let iscpVersionString: <<error type>>","type":"var"},{"path":"\/documentation\/iscp\/kiscpframeworkversion","title":"let kISCPFrameworkVersion: String","type":"var"},{"path":"\/documentation\/iscp\/kiscpsupportedprotocolversion","title":"let kISCPSupportedProtocolVersion: String","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/encodingname\/json","title":"case json","type":"case"},{"path":"\/documentation\/iscp\/encodingname\/protobuf","title":"case protobuf","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/encodingname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/encodingname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/encodingname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/encodingname\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/encodingname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/iscp\/encodingname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/encodingname","title":"EncodingName","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscperror\/==(_:_:)","title":"static func == (ISCPError, ISCPError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscperror\/failedmessage(_:_:)","title":"case failedMessage(UInt32, String)","type":"case"},{"path":"\/documentation\/iscp\/iscperror\/malformedmessage(_:)","title":"case malformedMessage(String)","type":"case"},{"path":"\/documentation\/iscp\/iscperror\/streamclosed","title":"case streamClosed","type":"case"},{"path":"\/documentation\/iscp\/iscperror\/timeout","title":"case timeout","type":"case"},{"path":"\/documentation\/iscp\/iscperror\/transportclosed","title":"case transportClosed","type":"case"},{"path":"\/documentation\/iscp\/iscperror\/unexpected(_:)","title":"case unexpected(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscperror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscperror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/iscperror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/iscp\/iscperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscperror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/iscp\/iscperror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/iscp\/iscperror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/iscp\/iscperror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/iscperror","title":"ISCPError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscploglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/iscp\/iscploglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/iscp\/iscploglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/iscp\/iscploglevel\/verbose","title":"case verbose","type":"case"},{"path":"\/documentation\/iscp\/iscploglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscploglevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscploglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/iscploglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscploglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/iscploglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/iscp\/iscploglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/iscploglevel","title":"ISCPLogLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/qos\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/iscp\/qos\/reliable","title":"case reliable","type":"case"},{"path":"\/documentation\/iscp\/qos\/unreliable","title":"case unreliable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/qos\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/qos\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/qos\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/qos\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/qos\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/iscp\/qos\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/qos","title":"QoS","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/iscp\/transporttype\/websocket","title":"case webSocket","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/iscp\/transporttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/iscp\/transporttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/iscp\/transporttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/iscp\/transporttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/transporttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/iscp\/transporttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/iscp\/transporttype","title":"TransportType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/foundation\/data\/todouble(islittleendian:)","title":"func toDouble(isLittleEndian: Bool) -> Double","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/tofloat64(islittleendian:)","title":"func toFloat64(isLittleEndian: Bool) -> Float64","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/toint16(islittleendian:)","title":"func toInt16(isLittleEndian: Bool) -> Int16","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/toint32(islittleendian:)","title":"func toInt32(isLittleEndian: Bool) -> Int32","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/toint64(islittleendian:)","title":"func toInt64(isLittleEndian: Bool) -> Int64","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/toint8(islittleendian:)","title":"func toInt8(isLittleEndian: Bool) -> Int8","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/touint16(islittleendian:)","title":"func toUInt16(isLittleEndian: Bool) -> UInt16","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/touint32(islittleendian:)","title":"func toUInt32(isLittleEndian: Bool) -> UInt32","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/touint64(islittleendian:)","title":"func toUInt64(isLittleEndian: Bool) -> UInt64","type":"method"},{"path":"\/documentation\/iscp\/foundation\/data\/touint8(islittleendian:)","title":"func toUInt8(isLittleEndian: Bool) -> UInt8","type":"method"}],"path":"\/documentation\/iscp\/foundation\/data","title":"Data","type":"extension"}],"path":"\/documentation\/iscp\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/double\/todata()","title":"func toData() -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/float\/todata()","title":"func toData() -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/float","title":"Float","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/int\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/int16\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/int16","title":"Int16","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/int32\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/int32","title":"Int32","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/int64\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/int64","title":"Int64","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/int8\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/int8","title":"Int8","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/uint16\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/uint16","title":"UInt16","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/uint32\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/uint64\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/uint64","title":"UInt64","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/iscp\/swift\/uint8\/todata(islittleendian:)","title":"func toData(isLittleEndian: Bool) -> Data","type":"method"}],"path":"\/documentation\/iscp\/swift\/uint8","title":"UInt8","type":"extension"}],"path":"\/documentation\/iscp\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/iscp","title":"iSCP","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}