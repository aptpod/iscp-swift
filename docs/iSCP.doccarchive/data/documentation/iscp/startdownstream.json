{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/iscp\/startdownstream"]},{"paths":["\/documentation\/iscp\/startdownstream"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/jp.co.aptpod.iSCP\/documentation\/iSCP\/StartDownstream"},"metadata":{"roleHeading":"Article","role":"article","title":"Start Downstream","modules":[{"name":"iSCP"}]},"hierarchy":{"paths":[["doc:\/\/jp.co.aptpod.iSCP\/documentation\/iSCP"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"アップストリームで送信されたデータをダウンストリームで受信するサンプルです。このサンプルでは、アップストリーム開始のメタデータ、基準時刻のメタデータ、 文字列型のデータポイントを受信しています。"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"codeListing","code":["\/\/\/ 受信したいデータを送信している送信元ノードのUUID","\/\/\/ （アップストリームを行っている送信元でConnection.Configで設定したnodeIDを指定してください。）","var targetDownstreamNodeID: String = \"00000000-0000-0000-0000-000000000000\"","\/\/\/ オープンしたダウンストリーム一覧","var downstreams: [Downstream] = []","","extension ExampleViewController {","    ","    func startDownstream() {","        \/\/ ダウンストリームをオープンします。","        connection?.openDownstream(","            downstreamFilters: [","                DownstreamFilter(","                    sourceNodeID: targetDownstreamNodeID, \/\/ 送信元ノードのIDを指定します。","                    dataFilters: [","                        DataFilter(","                            name: \"#\", type: \"#\" \/\/ 受信したいデータを名称と型で指定します。この例では、ワイルドカード `#` を使用して全てのデータを取得します。","                        )","                    ])","                ],","            completion: { downstream, error in","            guard let downstream = downstream else {","                \/\/ オープン失敗。","                return","            }","            \/\/ オープン成功。","            downstreams.append(downstream)","            \/\/ 受信データを取り扱うためにデリゲートを設定します。","            downstream.delegate = self \/\/ DownstreamDelegate","        })","    }","}","","extension ExampleViewController : DownstreamDelegate {","    ","    func didReceiveChunk(downstream: Downstream, message: DownstreamChunk) {","        \/\/ データポイントを読み込むことができた際にコールされます。","        print(\"Received dataPoints sequenceNumber[\\(message.sequenceNumber)], sessionId[\\(message.upstreamInfo.sessionID)]\")","        for g in message.dataPointGroups {","            for dp in g.dataPoints {","                print(\"Received a dataPoint dataName[\\(g.dataID.name)], dataType[\\(g.dataID.type)], payload[\\(String(data: dp.payload, encoding: .utf8) ?? \"\")]\")","            }","        }","    }","    ","    func didReceiveMetadata(downstream: Downstream, message: DownstreamMetadata) {","        \/\/ メタデータを受信した際にコールされます。","        print(\"Received a metadata sourceNodeID[\\(message.sourceNodeID)], metadataType:\\(String(describing: message.metadata))\")","        switch message.metadata {","        case .baseTime(let baseTime):","            print(\"Received baseTime[\\(Date(timeIntervalSince1970: baseTime.baseTime))], priority[\\(baseTime.priority)], name[\\(baseTime.priority)]\")","        default: break","        }","    }","    ","    func didFailWithError(downstream: Downstream, error: Error) {","        \/\/ 内部でエラーが発生した場合にコールされます。","    }","    ","    func didCloseWithError(downstream: Downstream, error: Error) {","        \/\/ 何らかの理由でストリームがクローズした場合にコールされます。","        \/\/ 再度ダウンストリームをオープンしたい場合は、 `Connection.reopenDownstream()` を使用することにより、ストリームの設定を引き継いで別のストリームを開くことが可能です。","    }","    ","    func didResume(downstream: Downstream) {","        \/\/ 自動再接続機能が働き、再接続が行われた場合にコールされます。","    }","    ","}"],"syntax":"swift"}]}],"references":{"doc://jp.co.aptpod.iSCP/documentation/iSCP":{"kind":"symbol","role":"collection","identifier":"doc:\/\/jp.co.aptpod.iSCP\/documentation\/iSCP","title":"iSCP","abstract":[{"type":"text","text":"iSCP Client for Swift は、iSCP version 2 を用いたリアルタイムAPIにアクセスするためのクライアントライブラリです。"}],"url":"\/documentation\/iscp","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"op":"add","path":"\/topicSections","value":null},{"path":"\/seeAlsoSections","value":null,"op":"add"}]}]}